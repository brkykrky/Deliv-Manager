version: "3.9"
services:
  backend-db:
    container_name: backend-db
    image: "postgres:15"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    volumes:
      - backend_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: delivmanageradmin
      POSTGRES_PASSWORD: d€livmanaG€r.. 
      POSTGRES_DB: delivmanager
    networks:
      - delivmanager
    ports:
      - "5432:5432"

  keycloak-db:
    container_name: keycloak-db
    image: "postgres:15"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: keycloakadmin
      POSTGRES_PASSWORD: k€ycl0ak!.
      POSTGRES_DB: keycloak
    networks:
      - delivmanager
    ports:
      - "5433:5432"


  backend:
    container_name: backend
    depends_on:
      - backend-db
    build:
      context: .
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://backend-db/delivmanager
      - SPRING_DATASOURCE_USERNAME=delivmanageradmin
      - SPRING_DATASOURCE_PASSWORD=d€livmanaG€r..
      - OAUTH_ISSUER_URI=keycloak:8080/realms/m2gil
    networks:
      - delivmanager
    ports:
      - "8080:8080"

  keycloak:
    container_name: keycloak
    depends_on:
      - keycloak-db
    image: quay.io/keycloak/keycloak:22.0.4
    command: ["start-dev","--import-realm"]
    volumes:
      - ./data:/opt/keycloak/data/import
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloakadmin
      KC_DB_PASSWORD: k€ycl0ak!.
    networks:
      - delivmanager
    ports:
      - "8081:8080"
  frontend:
      container_name: frontend
      build:
        context: ./FrontEnd/.
      environment:
        - keycloak_url=http://keycloak:8080/
        - apiUrl=http://backend:8080/
      networks:
        - delivmanager
      ports:
        - "4200:80"
networks:
  delivmanager:
    driver: bridge

volumes:
  backend_db_data:
  keycloak_db_data: